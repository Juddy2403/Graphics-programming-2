<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="CMakePresetLoader">{
  &quot;useNewFormat&quot;: true
}</component>
  <component name="CMakeReloadState">
    <option name="reloaded" value="true" />
  </component>
  <component name="CMakeRunConfigurationManager">
    <generated>
      <config projectName="VulkanLab01" targetName="boing" />
      <config projectName="VulkanLab01" targetName="glfwinfo" />
      <config projectName="VulkanLab01" targetName="Shaders" />
      <config projectName="VulkanLab01" targetName="uninstall" />
      <config projectName="VulkanLab01" targetName="joysticks" />
      <config projectName="VulkanLab01" targetName="windows" />
      <config projectName="VulkanLab01" targetName="VulkanLab01" />
      <config projectName="VulkanLab01" targetName="gamma" />
      <config projectName="VulkanLab01" targetName="monitors" />
      <config projectName="VulkanLab01" targetName="timeout" />
      <config projectName="VulkanLab01" targetName="msaa" />
      <config projectName="VulkanLab01" targetName="reopen" />
      <config projectName="VulkanLab01" targetName="triangle-vulkan" />
      <config projectName="VulkanLab01" targetName="empty" />
      <config projectName="VulkanLab01" targetName="sharing" />
      <config projectName="VulkanLab01" targetName="update_mappings" />
      <config projectName="VulkanLab01" targetName="opacity" />
      <config projectName="VulkanLab01" targetName="cursor" />
      <config projectName="VulkanLab01" targetName="wave" />
      <config projectName="VulkanLab01" targetName="particles" />
      <config projectName="VulkanLab01" targetName="title" />
      <config projectName="VulkanLab01" targetName="tearing" />
      <config projectName="VulkanLab01" targetName="inputlag" />
      <config projectName="VulkanLab01" targetName="clipboard" />
      <config projectName="VulkanLab01" targetName="iconify" />
      <config projectName="VulkanLab01" targetName="heightmap" />
      <config projectName="VulkanLab01" targetName="events" />
      <config projectName="VulkanLab01" targetName="icon" />
      <config projectName="VulkanLab01" targetName="threads" />
      <config projectName="VulkanLab01" targetName="gears" />
      <config projectName="VulkanLab01" targetName="offscreen" />
      <config projectName="VulkanLab01" targetName="simple" />
      <config projectName="VulkanLab01" targetName="splitview" />
      <config projectName="VulkanLab01" targetName="glfw" />
    </generated>
  </component>
  <component name="CMakeSettings" AUTO_RELOAD="true">
    <configurations>
      <configuration PROFILE_NAME="Debug" ENABLED="true" CONFIG_NAME="Debug" />
    </configurations>
  </component>
  <component name="ChangeListManager">
    <list default="true" id="968bb24f-2a49-406d-91e5-1a4b522e6289" name="Changes" comment="">
      <change afterPath="$PROJECT_DIR$/Project/lib/SDL2/BUGS.txt" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Project/lib/SDL2/COPYING.txt" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Project/lib/SDL2/README-SDL.txt" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Project/lib/SDL2/README.txt" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Project/lib/SDL2/WhatsNew.txt" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Project/lib/SDL2/cmake/sdl2-config-version.cmake" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Project/lib/SDL2/cmake/sdl2-config.cmake" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Project/lib/SDL2/docs/CONTRIBUTING.md" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Project/lib/SDL2/docs/README-android.md" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Project/lib/SDL2/docs/README-cmake.md" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Project/lib/SDL2/docs/README-directfb.md" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Project/lib/SDL2/docs/README-dynapi.md" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Project/lib/SDL2/docs/README-emscripten.md" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Project/lib/SDL2/docs/README-gdk.md" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Project/lib/SDL2/docs/README-gesture.md" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Project/lib/SDL2/docs/README-git.md" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Project/lib/SDL2/docs/README-hg.md" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Project/lib/SDL2/docs/README-ios.md" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Project/lib/SDL2/docs/README-kmsbsd.md" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Project/lib/SDL2/docs/README-linux.md" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Project/lib/SDL2/docs/README-macos.md" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Project/lib/SDL2/docs/README-n3ds.md" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Project/lib/SDL2/docs/README-nacl.md" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Project/lib/SDL2/docs/README-ngage.md" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Project/lib/SDL2/docs/README-os2.md" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Project/lib/SDL2/docs/README-pandora.md" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Project/lib/SDL2/docs/README-platforms.md" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Project/lib/SDL2/docs/README-porting.md" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Project/lib/SDL2/docs/README-ps2.md" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Project/lib/SDL2/docs/README-psp.md" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Project/lib/SDL2/docs/README-raspberrypi.md" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Project/lib/SDL2/docs/README-riscos.md" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Project/lib/SDL2/docs/README-touch.md" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Project/lib/SDL2/docs/README-versions.md" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Project/lib/SDL2/docs/README-visualc.md" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Project/lib/SDL2/docs/README-vita.md" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Project/lib/SDL2/docs/README-wince.md" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Project/lib/SDL2/docs/README-windows.md" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Project/lib/SDL2/docs/README-winrt.md" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Project/lib/SDL2/docs/README.md" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Project/lib/SDL2/docs/doxyfile" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Project/lib/SDL2/docs/release_checklist.md" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.gitignore" beforeDir="false" afterPath="$PROJECT_DIR$/.gitignore" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/Project/2DMesh.cpp" beforeDir="false" afterPath="$PROJECT_DIR$/Project/2DMesh.cpp" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/Project/2DMesh.h" beforeDir="false" afterPath="$PROJECT_DIR$/Project/2DMesh.h" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/Project/3DMesh.cpp" beforeDir="false" afterPath="$PROJECT_DIR$/Project/3DMesh.cpp" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/Project/3DMesh.h" beforeDir="false" afterPath="$PROJECT_DIR$/Project/3DMesh.h" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/Project/CMakeLists.txt" beforeDir="false" afterPath="$PROJECT_DIR$/Project/CMakeLists.txt" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/Project/Camera.h" beforeDir="false" afterPath="$PROJECT_DIR$/Project/Camera.h" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/Project/Level.cpp" beforeDir="false" afterPath="$PROJECT_DIR$/Project/Level.cpp" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/Project/Level.h" beforeDir="false" afterPath="$PROJECT_DIR$/Project/Level.h" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/Project/labwork/VulkanBase.cpp" beforeDir="false" afterPath="$PROJECT_DIR$/Project/labwork/VulkanBase.cpp" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/Project/labwork/Week06.cpp" beforeDir="false" afterPath="$PROJECT_DIR$/Project/labwork/Week06.cpp" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/Project/lib/SDL2/include/SDL.h" beforeDir="false" afterPath="$PROJECT_DIR$/Project/lib/SDL2/include/SDL.h" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/Project/lib/SDL2/include/SDL_assert.h" beforeDir="false" afterPath="$PROJECT_DIR$/Project/lib/SDL2/include/SDL_assert.h" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/Project/lib/SDL2/include/SDL_atomic.h" beforeDir="false" afterPath="$PROJECT_DIR$/Project/lib/SDL2/include/SDL_atomic.h" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/Project/lib/SDL2/include/SDL_audio.h" beforeDir="false" afterPath="$PROJECT_DIR$/Project/lib/SDL2/include/SDL_audio.h" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/Project/lib/SDL2/include/SDL_bits.h" beforeDir="false" afterPath="$PROJECT_DIR$/Project/lib/SDL2/include/SDL_bits.h" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/Project/lib/SDL2/include/SDL_blendmode.h" beforeDir="false" afterPath="$PROJECT_DIR$/Project/lib/SDL2/include/SDL_blendmode.h" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/Project/lib/SDL2/include/SDL_clipboard.h" beforeDir="false" afterPath="$PROJECT_DIR$/Project/lib/SDL2/include/SDL_clipboard.h" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/Project/lib/SDL2/include/SDL_config.h" beforeDir="false" afterPath="$PROJECT_DIR$/Project/lib/SDL2/include/SDL_config.h" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/Project/lib/SDL2/include/SDL_cpuinfo.h" beforeDir="false" afterPath="$PROJECT_DIR$/Project/lib/SDL2/include/SDL_cpuinfo.h" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/Project/lib/SDL2/include/SDL_egl.h" beforeDir="false" afterPath="$PROJECT_DIR$/Project/lib/SDL2/include/SDL_egl.h" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/Project/lib/SDL2/include/SDL_endian.h" beforeDir="false" afterPath="$PROJECT_DIR$/Project/lib/SDL2/include/SDL_endian.h" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/Project/lib/SDL2/include/SDL_error.h" beforeDir="false" afterPath="$PROJECT_DIR$/Project/lib/SDL2/include/SDL_error.h" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/Project/lib/SDL2/include/SDL_events.h" beforeDir="false" afterPath="$PROJECT_DIR$/Project/lib/SDL2/include/SDL_events.h" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/Project/lib/SDL2/include/SDL_filesystem.h" beforeDir="false" afterPath="$PROJECT_DIR$/Project/lib/SDL2/include/SDL_filesystem.h" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/Project/lib/SDL2/include/SDL_gamecontroller.h" beforeDir="false" afterPath="$PROJECT_DIR$/Project/lib/SDL2/include/SDL_gamecontroller.h" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/Project/lib/SDL2/include/SDL_gesture.h" beforeDir="false" afterPath="$PROJECT_DIR$/Project/lib/SDL2/include/SDL_gesture.h" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/Project/lib/SDL2/include/SDL_guid.h" beforeDir="false" afterPath="$PROJECT_DIR$/Project/lib/SDL2/include/SDL_guid.h" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/Project/lib/SDL2/include/SDL_haptic.h" beforeDir="false" afterPath="$PROJECT_DIR$/Project/lib/SDL2/include/SDL_haptic.h" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/Project/lib/SDL2/include/SDL_hidapi.h" beforeDir="false" afterPath="$PROJECT_DIR$/Project/lib/SDL2/include/SDL_hidapi.h" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/Project/lib/SDL2/include/SDL_hints.h" beforeDir="false" afterPath="$PROJECT_DIR$/Project/lib/SDL2/include/SDL_hints.h" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/Project/lib/SDL2/include/SDL_joystick.h" beforeDir="false" afterPath="$PROJECT_DIR$/Project/lib/SDL2/include/SDL_joystick.h" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/Project/lib/SDL2/include/SDL_keyboard.h" beforeDir="false" afterPath="$PROJECT_DIR$/Project/lib/SDL2/include/SDL_keyboard.h" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/Project/lib/SDL2/include/SDL_keycode.h" beforeDir="false" afterPath="$PROJECT_DIR$/Project/lib/SDL2/include/SDL_keycode.h" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/Project/lib/SDL2/include/SDL_loadso.h" beforeDir="false" afterPath="$PROJECT_DIR$/Project/lib/SDL2/include/SDL_loadso.h" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/Project/lib/SDL2/include/SDL_locale.h" beforeDir="false" afterPath="$PROJECT_DIR$/Project/lib/SDL2/include/SDL_locale.h" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/Project/lib/SDL2/include/SDL_log.h" beforeDir="false" afterPath="$PROJECT_DIR$/Project/lib/SDL2/include/SDL_log.h" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/Project/lib/SDL2/include/SDL_main.h" beforeDir="false" afterPath="$PROJECT_DIR$/Project/lib/SDL2/include/SDL_main.h" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/Project/lib/SDL2/include/SDL_messagebox.h" beforeDir="false" afterPath="$PROJECT_DIR$/Project/lib/SDL2/include/SDL_messagebox.h" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/Project/lib/SDL2/include/SDL_metal.h" beforeDir="false" afterPath="$PROJECT_DIR$/Project/lib/SDL2/include/SDL_metal.h" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/Project/lib/SDL2/include/SDL_misc.h" beforeDir="false" afterPath="$PROJECT_DIR$/Project/lib/SDL2/include/SDL_misc.h" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/Project/lib/SDL2/include/SDL_mouse.h" beforeDir="false" afterPath="$PROJECT_DIR$/Project/lib/SDL2/include/SDL_mouse.h" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/Project/lib/SDL2/include/SDL_mutex.h" beforeDir="false" afterPath="$PROJECT_DIR$/Project/lib/SDL2/include/SDL_mutex.h" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/Project/lib/SDL2/include/SDL_name.h" beforeDir="false" afterPath="$PROJECT_DIR$/Project/lib/SDL2/include/SDL_name.h" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/Project/lib/SDL2/include/SDL_opengl.h" beforeDir="false" afterPath="$PROJECT_DIR$/Project/lib/SDL2/include/SDL_opengl.h" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/Project/lib/SDL2/include/SDL_opengl_glext.h" beforeDir="false" afterPath="$PROJECT_DIR$/Project/lib/SDL2/include/SDL_opengl_glext.h" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/Project/lib/SDL2/include/SDL_opengles.h" beforeDir="false" afterPath="$PROJECT_DIR$/Project/lib/SDL2/include/SDL_opengles.h" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/Project/lib/SDL2/include/SDL_opengles2.h" beforeDir="false" afterPath="$PROJECT_DIR$/Project/lib/SDL2/include/SDL_opengles2.h" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/Project/lib/SDL2/include/SDL_opengles2_gl2.h" beforeDir="false" afterPath="$PROJECT_DIR$/Project/lib/SDL2/include/SDL_opengles2_gl2.h" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/Project/lib/SDL2/include/SDL_opengles2_gl2ext.h" beforeDir="false" afterPath="$PROJECT_DIR$/Project/lib/SDL2/include/SDL_opengles2_gl2ext.h" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/Project/lib/SDL2/include/SDL_opengles2_gl2platform.h" beforeDir="false" afterPath="$PROJECT_DIR$/Project/lib/SDL2/include/SDL_opengles2_gl2platform.h" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/Project/lib/SDL2/include/SDL_opengles2_khrplatform.h" beforeDir="false" afterPath="$PROJECT_DIR$/Project/lib/SDL2/include/SDL_opengles2_khrplatform.h" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/Project/lib/SDL2/include/SDL_pixels.h" beforeDir="false" afterPath="$PROJECT_DIR$/Project/lib/SDL2/include/SDL_pixels.h" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/Project/lib/SDL2/include/SDL_platform.h" beforeDir="false" afterPath="$PROJECT_DIR$/Project/lib/SDL2/include/SDL_platform.h" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/Project/lib/SDL2/include/SDL_power.h" beforeDir="false" afterPath="$PROJECT_DIR$/Project/lib/SDL2/include/SDL_power.h" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/Project/lib/SDL2/include/SDL_quit.h" beforeDir="false" afterPath="$PROJECT_DIR$/Project/lib/SDL2/include/SDL_quit.h" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/Project/lib/SDL2/include/SDL_rect.h" beforeDir="false" afterPath="$PROJECT_DIR$/Project/lib/SDL2/include/SDL_rect.h" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/Project/lib/SDL2/include/SDL_render.h" beforeDir="false" afterPath="$PROJECT_DIR$/Project/lib/SDL2/include/SDL_render.h" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/Project/lib/SDL2/include/SDL_revision.h" beforeDir="false" afterPath="$PROJECT_DIR$/Project/lib/SDL2/include/SDL_revision.h" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/Project/lib/SDL2/include/SDL_rwops.h" beforeDir="false" afterPath="$PROJECT_DIR$/Project/lib/SDL2/include/SDL_rwops.h" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/Project/lib/SDL2/include/SDL_scancode.h" beforeDir="false" afterPath="$PROJECT_DIR$/Project/lib/SDL2/include/SDL_scancode.h" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/Project/lib/SDL2/include/SDL_sensor.h" beforeDir="false" afterPath="$PROJECT_DIR$/Project/lib/SDL2/include/SDL_sensor.h" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/Project/lib/SDL2/include/SDL_shape.h" beforeDir="false" afterPath="$PROJECT_DIR$/Project/lib/SDL2/include/SDL_shape.h" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/Project/lib/SDL2/include/SDL_stdinc.h" beforeDir="false" afterPath="$PROJECT_DIR$/Project/lib/SDL2/include/SDL_stdinc.h" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/Project/lib/SDL2/include/SDL_surface.h" beforeDir="false" afterPath="$PROJECT_DIR$/Project/lib/SDL2/include/SDL_surface.h" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/Project/lib/SDL2/include/SDL_system.h" beforeDir="false" afterPath="$PROJECT_DIR$/Project/lib/SDL2/include/SDL_system.h" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/Project/lib/SDL2/include/SDL_syswm.h" beforeDir="false" afterPath="$PROJECT_DIR$/Project/lib/SDL2/include/SDL_syswm.h" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/Project/lib/SDL2/include/SDL_test.h" beforeDir="false" afterPath="$PROJECT_DIR$/Project/lib/SDL2/include/SDL_test.h" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/Project/lib/SDL2/include/SDL_test_assert.h" beforeDir="false" afterPath="$PROJECT_DIR$/Project/lib/SDL2/include/SDL_test_assert.h" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/Project/lib/SDL2/include/SDL_test_common.h" beforeDir="false" afterPath="$PROJECT_DIR$/Project/lib/SDL2/include/SDL_test_common.h" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/Project/lib/SDL2/include/SDL_test_compare.h" beforeDir="false" afterPath="$PROJECT_DIR$/Project/lib/SDL2/include/SDL_test_compare.h" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/Project/lib/SDL2/include/SDL_test_crc32.h" beforeDir="false" afterPath="$PROJECT_DIR$/Project/lib/SDL2/include/SDL_test_crc32.h" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/Project/lib/SDL2/include/SDL_test_font.h" beforeDir="false" afterPath="$PROJECT_DIR$/Project/lib/SDL2/include/SDL_test_font.h" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/Project/lib/SDL2/include/SDL_test_fuzzer.h" beforeDir="false" afterPath="$PROJECT_DIR$/Project/lib/SDL2/include/SDL_test_fuzzer.h" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/Project/lib/SDL2/include/SDL_test_harness.h" beforeDir="false" afterPath="$PROJECT_DIR$/Project/lib/SDL2/include/SDL_test_harness.h" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/Project/lib/SDL2/include/SDL_test_images.h" beforeDir="false" afterPath="$PROJECT_DIR$/Project/lib/SDL2/include/SDL_test_images.h" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/Project/lib/SDL2/include/SDL_test_log.h" beforeDir="false" afterPath="$PROJECT_DIR$/Project/lib/SDL2/include/SDL_test_log.h" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/Project/lib/SDL2/include/SDL_test_md5.h" beforeDir="false" afterPath="$PROJECT_DIR$/Project/lib/SDL2/include/SDL_test_md5.h" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/Project/lib/SDL2/include/SDL_test_memory.h" beforeDir="false" afterPath="$PROJECT_DIR$/Project/lib/SDL2/include/SDL_test_memory.h" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/Project/lib/SDL2/include/SDL_test_random.h" beforeDir="false" afterPath="$PROJECT_DIR$/Project/lib/SDL2/include/SDL_test_random.h" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/Project/lib/SDL2/include/SDL_thread.h" beforeDir="false" afterPath="$PROJECT_DIR$/Project/lib/SDL2/include/SDL_thread.h" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/Project/lib/SDL2/include/SDL_timer.h" beforeDir="false" afterPath="$PROJECT_DIR$/Project/lib/SDL2/include/SDL_timer.h" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/Project/lib/SDL2/include/SDL_touch.h" beforeDir="false" afterPath="$PROJECT_DIR$/Project/lib/SDL2/include/SDL_touch.h" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/Project/lib/SDL2/include/SDL_types.h" beforeDir="false" afterPath="$PROJECT_DIR$/Project/lib/SDL2/include/SDL_types.h" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/Project/lib/SDL2/include/SDL_version.h" beforeDir="false" afterPath="$PROJECT_DIR$/Project/lib/SDL2/include/SDL_version.h" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/Project/lib/SDL2/include/SDL_video.h" beforeDir="false" afterPath="$PROJECT_DIR$/Project/lib/SDL2/include/SDL_video.h" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/Project/lib/SDL2/include/SDL_vulkan.h" beforeDir="false" afterPath="$PROJECT_DIR$/Project/lib/SDL2/include/SDL_vulkan.h" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/Project/lib/SDL2/include/begin_code.h" beforeDir="false" afterPath="$PROJECT_DIR$/Project/lib/SDL2/include/begin_code.h" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/Project/lib/SDL2/include/close_code.h" beforeDir="false" afterPath="$PROJECT_DIR$/Project/lib/SDL2/include/close_code.h" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/Project/shaders/3Dshader.frag" beforeDir="false" afterPath="$PROJECT_DIR$/Project/shaders/3Dshader.frag" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/Project/vulkanbase/VulkanBase.h" beforeDir="false" afterPath="$PROJECT_DIR$/Project/vulkanbase/VulkanBase.h" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/cache-v2-b93b77ddd762d84b9944.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.ninja_deps" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/.ninja_deps" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.ninja_log" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/.ninja_log" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/CMakeCache.txt" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/CMakeCache.txt" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/rules.ninja" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/rules.ninja" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/Project/VulkanLab01.exe" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/Project/VulkanLab01.exe" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/_deps/glfw-src/examples/boing.c" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/_deps/glfw-src/examples/boing.c" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/_deps/glfw-src/examples/particles.c" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/_deps/glfw-src/examples/particles.c" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/_deps/glfw-src/examples/wave.c" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/_deps/glfw-src/examples/wave.c" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/_deps/glfw-subbuild/.ninja_log" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/_deps/glfw-subbuild/.ninja_log" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/_deps/glfw-subbuild/CMakeCache.txt" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/_deps/glfw-subbuild/CMakeCache.txt" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/build.ninja" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/build.ninja" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="ClangdSettings">
    <option name="formatViaClangd" value="false" />
  </component>
  <component name="ExecutionTargetManager" SELECTED_TARGET="CMakeBuildProfile:Debug" />
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="ProblemsViewState">
    <option name="selectedTabId" value="ProjectErrors" />
  </component>
  <component name="ProjectApplicationVersion">
    <option name="ide" value="CLion" />
    <option name="majorVersion" value="2023" />
    <option name="minorVersion" value="3.4" />
  </component>
  <component name="ProjectColorInfo">{
  &quot;customColor&quot;: &quot;&quot;,
  &quot;associatedIndex&quot;: 8
}</component>
  <component name="ProjectId" id="2edoVqxFJ9oBeFafvhe58NXkEXx" />
  <component name="ProjectLevelVcsManager">
    <ConfirmationsSetting value="2" id="Add" />
  </component>
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent"><![CDATA[{
  "keyToString": {
    "ASKED_ADD_EXTERNAL_FILES": "true",
    "CMake Application.VulkanLab01.executor": "Run",
    "RunOnceActivity.OpenProjectViewOnStart": "true",
    "RunOnceActivity.ShowReadmeOnStart": "true",
    "RunOnceActivity.cidr.known.project.marker": "true",
    "RunOnceActivity.readMode.enableVisualFormatting": "true",
    "SHARE_PROJECT_CONFIGURATION_FILES": "true",
    "cf.first.check.clang-format": "false",
    "cidr.known.project.marker": "true",
    "git-widget-placeholder": "master",
    "ignore.virus.scanning.warn.message": "true",
    "node.js.detected.package.eslint": "true",
    "node.js.detected.package.tslint": "true",
    "node.js.selected.package.eslint": "(autodetect)",
    "node.js.selected.package.tslint": "(autodetect)",
    "nodejs_package_manager_path": "npm",
    "run.code.analysis.last.selected.profile": "pProject Default",
    "settings.editor.selected.configurable": "preferences.lookFeel",
    "structure.view.defaults.are.configured": "true",
    "vue.rearranger.settings.migration": "true"
  }
}]]></component>
  <component name="RunManager" selected="CMake Application.VulkanLab01">
    <configuration default="true" type="CLionExternalRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true">
      <method v="2">
        <option name="CLION.EXTERNAL.BUILD" enabled="true" />
      </method>
    </configuration>
    <configuration name="Shaders" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="VulkanLab01" TARGET_NAME="Shaders" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="VulkanLab01" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="VulkanLab01" TARGET_NAME="VulkanLab01" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="VulkanLab01" RUN_TARGET_NAME="VulkanLab01">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="boing" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="VulkanLab01" TARGET_NAME="boing" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="VulkanLab01" RUN_TARGET_NAME="boing">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="clipboard" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="VulkanLab01" TARGET_NAME="clipboard" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="VulkanLab01" RUN_TARGET_NAME="clipboard">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="cursor" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="VulkanLab01" TARGET_NAME="cursor" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="VulkanLab01" RUN_TARGET_NAME="cursor">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="empty" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="VulkanLab01" TARGET_NAME="empty" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="VulkanLab01" RUN_TARGET_NAME="empty">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="events" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="VulkanLab01" TARGET_NAME="events" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="VulkanLab01" RUN_TARGET_NAME="events">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="gamma" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="VulkanLab01" TARGET_NAME="gamma" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="VulkanLab01" RUN_TARGET_NAME="gamma">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="gears" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="VulkanLab01" TARGET_NAME="gears" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="VulkanLab01" RUN_TARGET_NAME="gears">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="glfw" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="VulkanLab01" TARGET_NAME="glfw" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="glfwinfo" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="VulkanLab01" TARGET_NAME="glfwinfo" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="VulkanLab01" RUN_TARGET_NAME="glfwinfo">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="heightmap" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="VulkanLab01" TARGET_NAME="heightmap" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="VulkanLab01" RUN_TARGET_NAME="heightmap">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="icon" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="VulkanLab01" TARGET_NAME="icon" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="VulkanLab01" RUN_TARGET_NAME="icon">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="iconify" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="VulkanLab01" TARGET_NAME="iconify" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="VulkanLab01" RUN_TARGET_NAME="iconify">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="inputlag" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="VulkanLab01" TARGET_NAME="inputlag" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="VulkanLab01" RUN_TARGET_NAME="inputlag">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="joysticks" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="VulkanLab01" TARGET_NAME="joysticks" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="VulkanLab01" RUN_TARGET_NAME="joysticks">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="monitors" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="VulkanLab01" TARGET_NAME="monitors" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="VulkanLab01" RUN_TARGET_NAME="monitors">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="msaa" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="VulkanLab01" TARGET_NAME="msaa" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="VulkanLab01" RUN_TARGET_NAME="msaa">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="offscreen" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="VulkanLab01" TARGET_NAME="offscreen" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="VulkanLab01" RUN_TARGET_NAME="offscreen">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="opacity" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="VulkanLab01" TARGET_NAME="opacity" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="VulkanLab01" RUN_TARGET_NAME="opacity">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="particles" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="VulkanLab01" TARGET_NAME="particles" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="VulkanLab01" RUN_TARGET_NAME="particles">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="reopen" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="VulkanLab01" TARGET_NAME="reopen" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="VulkanLab01" RUN_TARGET_NAME="reopen">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="sharing" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="VulkanLab01" TARGET_NAME="sharing" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="VulkanLab01" RUN_TARGET_NAME="sharing">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="simple" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="VulkanLab01" TARGET_NAME="simple" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="VulkanLab01" RUN_TARGET_NAME="simple">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="splitview" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="VulkanLab01" TARGET_NAME="splitview" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="VulkanLab01" RUN_TARGET_NAME="splitview">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="tearing" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="VulkanLab01" TARGET_NAME="tearing" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="VulkanLab01" RUN_TARGET_NAME="tearing">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="threads" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="VulkanLab01" TARGET_NAME="threads" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="VulkanLab01" RUN_TARGET_NAME="threads">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="timeout" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="VulkanLab01" TARGET_NAME="timeout" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="VulkanLab01" RUN_TARGET_NAME="timeout">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="title" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="VulkanLab01" TARGET_NAME="title" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="VulkanLab01" RUN_TARGET_NAME="title">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="triangle-vulkan" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="VulkanLab01" TARGET_NAME="triangle-vulkan" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="VulkanLab01" RUN_TARGET_NAME="triangle-vulkan">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="uninstall" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="VulkanLab01" TARGET_NAME="uninstall" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="update_mappings" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="VulkanLab01" TARGET_NAME="update_mappings" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="wave" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="VulkanLab01" TARGET_NAME="wave" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="VulkanLab01" RUN_TARGET_NAME="wave">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="windows" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="VulkanLab01" TARGET_NAME="windows" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="VulkanLab01" RUN_TARGET_NAME="windows">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <list>
      <item itemvalue="CMake Application.Shaders" />
      <item itemvalue="CMake Application.VulkanLab01" />
      <item itemvalue="CMake Application.boing" />
      <item itemvalue="CMake Application.clipboard" />
      <item itemvalue="CMake Application.cursor" />
      <item itemvalue="CMake Application.empty" />
      <item itemvalue="CMake Application.events" />
      <item itemvalue="CMake Application.gamma" />
      <item itemvalue="CMake Application.gears" />
      <item itemvalue="CMake Application.glfw" />
      <item itemvalue="CMake Application.glfwinfo" />
      <item itemvalue="CMake Application.heightmap" />
      <item itemvalue="CMake Application.icon" />
      <item itemvalue="CMake Application.iconify" />
      <item itemvalue="CMake Application.inputlag" />
      <item itemvalue="CMake Application.joysticks" />
      <item itemvalue="CMake Application.monitors" />
      <item itemvalue="CMake Application.msaa" />
      <item itemvalue="CMake Application.offscreen" />
      <item itemvalue="CMake Application.opacity" />
      <item itemvalue="CMake Application.particles" />
      <item itemvalue="CMake Application.reopen" />
      <item itemvalue="CMake Application.sharing" />
      <item itemvalue="CMake Application.simple" />
      <item itemvalue="CMake Application.splitview" />
      <item itemvalue="CMake Application.tearing" />
      <item itemvalue="CMake Application.threads" />
      <item itemvalue="CMake Application.timeout" />
      <item itemvalue="CMake Application.title" />
      <item itemvalue="CMake Application.triangle-vulkan" />
      <item itemvalue="CMake Application.uninstall" />
      <item itemvalue="CMake Application.update_mappings" />
      <item itemvalue="CMake Application.wave" />
      <item itemvalue="CMake Application.windows" />
    </list>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="968bb24f-2a49-406d-91e5-1a4b522e6289" name="Changes" comment="" />
      <created>1712243843708</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1712243843708</updated>
      <workItem from="1712243844864" duration="55000" />
      <workItem from="1712243987227" duration="38000" />
      <workItem from="1712400852825" duration="345000" />
      <workItem from="1712401211095" duration="1528000" />
      <workItem from="1712402927774" duration="97000" />
      <workItem from="1712403033934" duration="7803000" />
      <workItem from="1712413731032" duration="5570000" />
      <workItem from="1712420526325" duration="816000" />
      <workItem from="1712426102364" duration="11257000" />
      <workItem from="1712440754263" duration="563000" />
      <workItem from="1712486910819" duration="27747000" />
      <workItem from="1712569561138" duration="9793000" />
      <workItem from="1712589657838" duration="16316000" />
    </task>
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="VCPKGProject">
    <isAutomaticCheckingOnLaunch value="false" />
    <isAutomaticFoundErrors value="true" />
    <isAutomaticReloadCMake value="true" />
  </component>
  <component name="VcsManagerConfiguration">
    <option name="ADD_EXTERNAL_FILES_SILENTLY" value="true" />
  </component>
  <component name="XSLT-Support.FileAssociations.UIState">
    <expand />
    <select />
  </component>
</project>